name: PyMCubes

on: [push]

jobs:
  test:
    name: Build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools cython
          python -m pip install -r requirements.txt
      - name: Build the package
        run: |
          python setup.py build_ext --inplace
      - name: Test and coverage
        run: |
          python -m pip install pycollada
          python -m pip install pytest>=7.2.0 pytest-cov>=4.0 codecov
          mkdir output
          python -m pytest --cov=mcubes --cov-report=xml
          codecov
      - name: Flake8
        run: |
          python -m pip install flake8
          flake8 .

  deploy-wheels:
    name: Deploy wheels on ${{ matrix.os }}
    runs-on: ubuntu-latest
    needs: test
    env:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.TESTPYPI }}
    # if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
      - name: Build sdist
        run: python -m build --sdist
      - name: Deploy sdist
        run:
          python3 -m pip install twine
          python3 -m twine upload --repository testpypi --skip-existing dist/*

  # deploy-wheels:
  #   name: Deploy wheels on ${{ matrix.os }}
  #   runs-on: ${{ matrix.os }}
  #   needs: test
  #   env:
  #     CIBW_SKIP: "*-win32 *-manylinux_i686 pp* cp36-* cp37-*"
  #     TWINE_USERNAME: __token__
  #     TWINE_PASSWORD: ${{ secrets.TESTPYPI }}
  #   # if: github.ref == 'refs/heads/master'

  #   strategy:
  #     matrix:
  #       os: [ubuntu-20.04, windows-2019, macOS-11]

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.9'
  #     - name: Install cibuildwheel
  #       run: |
  #         python -m pip install --upgrade pip
  #         python -m pip install cibuildwheel==2.11.4
  #     - name: Build wheels
  #       run: python3 -m cibuildwheel --output-dir wheelhouse
  #     - name: Deploy
  #       run: |
  #         python3 -m pip install twine
  #         python3 -m twine upload --repository testpypi --skip-existing wheelhouse/*.whl
