
language: python

os: linux

dist: xenial

python:
  - "3.7"
  - "3.8"
  - "3.9"
  - "3.10"

cache: pip

env:
  global:
    - TWINE_USERNAME=__token__
    - CIBW_SKIP="cp27-* cp39-macosx_x86_64 pp*"
    # - CIBW_BUILD=cp36-*

before_install:
  - sudo apt-get update
  - pip install --upgrade pip

install:
  - pip install -r requirements.txt
  - pip install nose>=1.3.7 coverage codecov pytest>=3.0.5 pycollada
  - python -m build
  - python -m pip install .

before_script:
  - mkdir output

script:
  - nosetests -v --exe --with-xunit --with-coverage --cover-package=mcubes

after_success:
  - codecov

stages:
  - name: test
  - name: deployment
    if: branch = master AND type = push AND fork = false

jobs:
  include:
    # Test jobs
    # - stage: test
    # Deployment jobs
    # Linux build
    - stage: deployment
      before_install: skip
      install: python3 -m pip install cibuildwheel==2.11.4
      before_script: skip
      script:
        - python3 setup.py sdist
        - python3 -m cibuildwheel --output-dir wheelhouse
      after_success:
        - python3 -m pip install twine
        - python3 -m twine upload --skip-existing dist/*
        - python3 -m twine upload --skip-existing wheelhouse/*.whl
      services: docker
    # MaxOS build
    - os: osx
      osx_image: xcode10.2
      language: shell
      before_install: skip
      install: python3 -m pip install cibuildwheel==2.11.4
      before_script: skip
      script: python3 -m cibuildwheel --output-dir wheelhouse
      after_success:
        - python3 -m pip install twine
        - python3 -m twine upload --skip-existing wheelhouse/*.whl
    # Windows build
    - os: windows
      language: shell
      before_install:
        - choco install python --version 3.8.0
        - export PATH="/c/Python38:/c/Python38/Scripts:$PATH"
        # make sure it's on PATH as 'python3'
        - ln -s /c/Python38/python.exe /c/Python38/python3.exe
      install: python3 -m pip install cibuildwheel==2.11.4
      before_script: skip
      script: python3 -m cibuildwheel --output-dir wheelhouse
      after_success:
        - python3 -m pip install twine
        - python3 -m twine upload --skip-existing wheelhouse/*.whl
